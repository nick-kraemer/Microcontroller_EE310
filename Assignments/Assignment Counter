// Title: Counter
//-----------------------------
// Purpose: This program is used to count up and down on a seven segement display using two push buttons
  //when buttonup is pushed the seven segement counts from 1 to F.And when buttondown is pushed
  // The seven segment counts down. When both buttons are pushed the seven segment will display 0/
// Dependencies:I'am using a file called Header.inc attacted to this project.
// Compiler: ASM 2.4
// Author: Nick Kraemer

  // OUTPUTS: 
  //PortA is used as my output for the seven segment
  //PortC is used as my output for the seven segment
  
  // INPUTS:
  // PortD1 is used as my input from the bottonup
  // PortD2 is used as my input from the bottondown
// Versions:
//  	V1.0: 3/20/24
//-----------------------------
; Initialization
;---------------------
#include "C:\Users\nkrae\OneDrive\Documents\310 MPlab Assignments\Assignment 6 Counter.X\Header.inc"
#include <xc.inc>
    
    
// PROGRAM INPUTS
//----------------
Inner_loop  equ 0xFF
Outer_loop  equ 0xFF

//----- -----------
//REGISTERS
//----------------
REG10   equ     20h   
REG11   equ     21h

//----------------
// PROGRAM OUTPUTS
//----------------



;-----------MAIN CODE------------------
    PSECT absdata,abs,ovrld        ; Do not change
 ORG 0x20
CALL _initalize
LFSR 0,0x01 ; load FSR 0 with REG0
MOVFF INDF0,PORTA ; put a 0 the seven seg
MOVFF INDF0,PORTC ; put a 0 the seven seg
 GOTO _Start
_Start:
     CALL _reset
      BTFSC PORTD,1 ; if PORTD1 is 0 skip next line
      CALL _countup
      BTFSC PORTD,2 ; if PORTD2 is 0 skip next line
      CALL _countdown
      GOTO _Start
      
_reset:
   CALL loopDelay
    BTFSS PORTD,1 ; if PORTD1 is 1 skip
    return
    BTFSS PORTD,2; if PORTD2 is 1 skip
    return
    LFSR 0,0x01
    MOVFF INDF0,PORTA ;
    MOVFF INDF0,PORTC ;added
    GOTO _reset
   
_countup:
    CALL loopDelay
     BTFSC PORTD,2 ;if portD2 is 0 skip next line
    return
    MOVLW 0x10
    CPFSLT FSR0 ; if FSR0< 10 then skip
    LFSR 0,0x00
    MOVFF PREINC0,PORTA ;   increments FSR0 then reads it
    MOVFF INDF0,PORTC;added
    BTFSS PORTD,1 ; if PORTD1 is still 1 skip next line
    return
    GOTO _countup

_countdown:
    CALL loopDelay
    BTFSC PORTD,1 ;if portD1 is 0 skip next line
    return
    MOVFF INDF0,PORTC;added
    MOVFF POSTDEC0,PORTA ; reads FSR0 then decrements it
    MOVLW 0x00
    CPFSGT FSR0 ; if FSR0 > 0 then skip
    LFSR 0,0x10
    
    
    BTFSS PORTD,2 ; if PORTD2 is still 1 skip next line
    return
    GOTO _countdown
    
    
    
_initalize:
    
    MOVLW 0x3F ;SS for 0
    MOVWF 0x01
    MOVLW 0x06 ;SS for 1
    MOVWF 0x02
    MOVLW 0x5B;SS for 2
    MOVWF 0x03
    MOVLW 0x4F;SS for 3
    MOVWF 0x04
    MOVLW 0x66;SS for 4
    MOVWF 0x05
    MOVLW 0x6D;SS for 5
    MOVWF 0x06
    MOVLW 0x7D;SS for 6
    MOVWF 0x07
    MOVLW 0x07;SS for 7
    MOVWF 0x08
    MOVLW 0x7F;SS for 8
    MOVWF 0x09
    MOVLW 0x6F;SS for 9
    MOVWF 0x0A
    MOVLW 0x77;SS for A
    MOVWF 0x0B
    MOVLW 0x7C ;SS for B
    MOVWF 0x0C
    MOVLW 0x58;SS for C
    MOVWF 0x0D
    MOVLW 0x5E;SS for D
    MOVWF 0x0E
    MOVLW 0x79;SS for E
    MOVWF 0x0F
    MOVLW 0x71;SS for F
    MOVWF 0x10
    CALL _setupPortD
    Call _setupPortA
    Call _setupPortC
    return
    
;The Delay Subroutine    
loopDelay: 
    MOVLW       Inner_loop
    MOVWF       REG10
    MOVLW       Outer_loop
    MOVWF       REG11
_loop1:
    DECF        REG10,1
    BNZ         _loop1
    MOVLW       Inner_loop ; Re-initialize the inner loop for when the outer loop decrements.
    MOVWF       REG10
    DECF        REG11,1 // outer loop
    BNZ        _loop1
    RETURN
      
      
      
      
_setupPortD:
    BANKSEL	PORTD ;
    CLRF	PORTD ;Init PORTA
    BANKSEL	LATD ;Data Latch
    CLRF	LATD ;
    BANKSEL	ANSELD ;
    CLRF	ANSELD ;digital I/O
    BANKSEL	TRISD ;
    MOVLW	0b11111111 ;Set RD[7:0] as inputs
    MOVWF	TRISD ;
    RETURN
    
_setupPortA:
    BANKSEL	PORTA ;
    CLRF	PORTA ;Init PORTA
    BANKSEL	LATA ;Data Latch
    CLRF	LATA ;
    BANKSEL	ANSELA ;
    CLRF	ANSELA ;digital I/O
    BANKSEL	TRISA ;
    MOVLW	0b00000000 ;Set RD[7:0] as outputs
    MOVWF	TRISA ;
    RETURN    

_setupPortC:
    BANKSEL	PORTC ;
    CLRF	PORTC ;Init PORTA
    BANKSEL	LATC ;Data Latch
    CLRF	LATC ;
    BANKSEL	ANSELC ;
    CLRF	ANSELC ;digital I/O
    BANKSEL	TRISC ;
    MOVLW	0b00000000 ;Set RD[7:0] as outputs
    MOVWF	TRISC ;
    RETURN    
